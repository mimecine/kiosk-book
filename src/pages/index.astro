---
import groupBy from "object.groupby";

import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import { marked } from "marked";
import D from "../assets/archive.kioskkiosk.json";
import Cover from "../assets/cover.svg";

import "../styles/book-base.css";

const title = "KIOSK: The Book";
const full_book = false; 
const exhibit_sample = full_book?1000:100;
const product_sample = full_book?1000:12;

Object.groupBy = groupBy.shim();

let pIndex = 1;
let products = (await getCollection("products"))
  .filter((p) => p.data.status == "active" && p.data.images?.length)
  .map((p) => {
    p.rendered = marked.parse(p.body);
    p.rendered = wrapLinks(p.rendered);
    return p;
  })
  .sort((a, b) => a.data.title.localeCompare(b.data.title));

  let pages = (await getCollection("pages")).filter((p) => p.data.title.startsWith("BOOK:"))
  .map((p) => {
    [p.data.prefix, p.data.before_exhibit, p.data.clean_title] = p.data.title
      .split(":")
      .map((t) => t.trim());
      p.rendered = marked.parse(p.body);
      p.rendered = wrapLinks(p.rendered);
      return p;
});

const groups = Object.groupBy(products, ({ data }) => data.product_type);

const products_by_material = {};
const products_by_dimension = {};
products.forEach((p) => {
  p.data.materials_array?.forEach((m) => {
    if (!products_by_material[m]) products_by_material[m] = [];
    products_by_material[m].push(p);
  });
  p.data.dimensions_array?.forEach((m) => {
    if (!products_by_dimension[m]) products_by_dimension[m] = [];
    products_by_dimension[m].push(p);
  });
});

const exhibits = [
  {name:"The later years", settings:{provenance:true}},
  {name:"Italy 2", settings:{}},
  {name:"Italy 1", settings:{}},
  {name:"Romania", settings:{}},
  {name:"Recall", settings:{provenance:true}},
  {name:"Greece", settings:{}},
  {name:"Holiday 2013", settings:{provenance:true}},
  {name:"Lend a Hand", settings:{provenance:true}},
  {name:"The Netherlands", settings:{}},
  {name:"Obama 2012", settings:{provenance:true}},
  {name:"Colombia", settings:{}},
  {name:"India #2", settings:{}},
  {name:"America #4", settings:{}},
  {name:"India", settings:{}},
  {name:"Japan #2", settings:{}},
  {name:"America #3", settings:{}},
  {name:"Iceland", settings:{}},
  {name:"Groundhog Day", settings:{provenance:true}},
  {name:"Portugal", settings:{}},
  {name:"Provence", settings:{}},
  {name:"America #2", settings:{}},
  {name:"9 for 2009", settings:{provenance:true}},
  {name:"America #1", settings:{}},
  {name:"Hong Kong", settings:{}},
  {name:"8 Things", settings:{provenance:true}},
  {name:"Finland", settings:{}},
  {name:"Germany", settings:{}},
  {name:"Mexico", settings:{}},
  {name:"Sweden", settings:{}},
  {name:"Japan", settings:{}},
]
  .reverse()
  .slice(0, exhibit_sample || 1000);

  let renderedIndex = 1;
  exhibits.map(exhibit => {
    groups[exhibit.name].slice(0, product_sample || 1000).forEach((p, i) => {
      p._rendered = true;
      p._index = renderedIndex++;
    })
  })

let currentEssay = null;

function wrapLinks(inputString) {
    var R1 =
    /(\s|>)(https?:\/\/(?:www\.)?(?:[-\w@:%.\+~#=]{1,256}\.)+[a-zA-Z0-9()]{1,6}\b(?:[-\w()@:%\+.~#?&//=]*))([\s.,!?]?)/gim;
    var R2 = /(\shref="[^"]+"\s?)/gmi
    var R3 = />https?:\/\/(?:www\.)?([\w\.]+)[^<]*(?:<)/gmi

    return inputString
      .replaceAll(R1, '$1<a href="$2">$2</a>$3') // Wrap links
      .replaceAll(R2, '$1 class="footnote"') // Add footnote class
      .replaceAll(R3, ">$1<") // hide ugly urls
}

var initial = null;
function newInitial(word) {
  if (word[0]?.match(/[a-zA-Z]/) && word[0] != initial) {
    console.log("new initial ", word[0]);
    initial = word[0];
    return initial;
  }
  return false;
}
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="author" content="Alisa Grifo & Marco ter Haar Romeny"/>
    <title>{title}</title>  
      
  </head>
  <body>
    <main>
      <div class="plainflow">
      
        <div class="cover cleanpage nopagenumber text-[36pt] font-sans font-bold h-screen xborder-t-4 xborder-b-4 border-current m-0 pt-10">
          <!-- 
          ******************************************************************
          ******************************************************************
          ******************************************************************
          COVER
          ******************************************************************
          ******************************************************************
          ******************************************************************
          -->
          <!-- <h1 class="">KIOSK 
            <div class="font-mono text-5xl text-red py-20 text-center">Things from places</div>
          </h1> -->
          <h1 class="hidden">KIOSK</h1>
          <Image src={Cover} alt={title}/>
        </div>

        <div class="toc cleanpage nopagenumber text-lg" style="break-before: recto;">
          <!-- 
          ******************************************************************
          ******************************************************************
          ******************************************************************
          TABLE OF CONTENTS
          ******************************************************************
          ******************************************************************
          ******************************************************************
          -->

          <div class="header font-sans border-b-4 border-red mb-12 pb-8 min-h-[18.85rem]">
            <h2 class="title relative font-bold">
              Contents
              <a
                class="absolute top-[-2rem]"
                id="contents"
              />
            </h2>
            <div class="subtitle text-2xl font-bold">
            </div>
          </div>
          <div class="columns-2 column-fill-auto" style="column-gap: 4rem;;">
          {exhibits.map((exhibit) => (
            <>
            {(() => {currentEssay = pages.find((p) => p.data.before_exhibit == exhibit.name)})()}
            {currentEssay && (
              <>
              <a class="xref italic my-2 text-red" href={`#essay-${currentEssay.data.clean_title}`}>{currentEssay.data.clean_title}</a>
              </>
            )}
            <a class="xref my-2" href={`#${exhibit.name}`}>{exhibit.name}</a>
            </>
          ))}
          <br>

          <a class="xref my-2font-bold " href="#index-bypicture">The Index: By Pictures</a>
    
          <a class="xref my-2" href="#index-alphabetical">The Index: Alphabetically</a>
          <a class="xref my-2" href="#index-byexhibit">The Index: By Exhibitions</a>
          <a class="xref my-2" href="#index-bymaterial">The Index: By Materials</a>
          <a class="xref my-2" href="#index-bydimension">The Index: By Dimensions</a>
        </div>
        </div>
        <div class="start products text-justify -x-columns-2 -x-column-fill-auto" style="column-gap: 2.5rem;"> 

        {
          exhibits.map((exhibit, i) => (
            <div class="exhibit -x-column-fill-auto">
              {/* {pages.filter((p) => p.data.before_exhibit == exhibit.name).map((essay)=>{(
                <div class="essay">
                  <div class="header font-sans border-b-4 border-red mb-12 xpb-8 min-h-[22rem] columns-all">
                    <h2 class="title font-bold text-sans" id={`xessay-${essay.data.clean_title}`} set:html={essay.data.clean_title}/>
                    <div class="subtitle text-2xl"/>
                  </div>
                  <div class="prose max-w-[5in] py-16 mx-auto" set:html={wrapLinks(essay.data.body_html)}/>
                </div>
              )})} */}

              {(() => {currentEssay = pages.find((p) => p.data.before_exhibit == exhibit.name)})()}
              {currentEssay && (
                <div class="essay">
                  <!-- ******* ESSAY ******** -->
                  <div class="header font-sans border-b-4 border-red mb-12 xpb-8 min-h-[22rem] -x-columns-all">
                    <h2 class="title font-bold text-sans" id={`essay-${currentEssay.data.clean_title}`} set:html={currentEssay.data.clean_title}/>
                    <div class="subtitle text-2xl"/>
                  </div>
              
                  <div class="prose max-w-[5in] py-16 mx-auto" set:html={wrapLinks(currentEssay.data.body_html)}/>
                </div>
              )}
              <div class="exhibit relative text-xl font-sans font-bold -x-columns-all">
                <!-- 
                ******************************************************************
                ******************************************************************
                ******************************************************************
                ARTICLES GROUPED BY EXHIBIT 
                ******************************************************************
                ******************************************************************
                ******************************************************************
                -->
                <div class="header font-sans border-b-4 border-red mb-12 xpb-8 min-h-[22rem] -x-columns-all">
                <h2 class="title relative">
                  {exhibit.name}
                  <a
                    class="absolute top-[-2rem]"
                    id={exhibit.name}
                    name={exhibit.name}
                  />
                </h2>
                <div
                  class="subtitle text-lg"
                  set:html={
                    D.SmartCollections.find((p) => p.title == exhibit.name)
                      ?.body_html || ""
                  }
                />
                </div>
              </div>
              <div class="exhibition-products columns-2 column-fill-auto" style="column-gap: 2.5rem;">
              {groups[exhibit.name]
                ?.slice(0, i == 0 ? product_sample + 11 : product_sample || 1000)
                .map((product) => (
                  
                    <div class="product relative overflow-auto mb-6  border-b-2 last:border-b-0 border-current border-transparent border-solid box-decoration-slice pb-4 " class:list={product.data.handle}>
                      <div class="min-h-40">
                        <a
                        id={product.data.handle}
                        class="absolute top-[-2rem]"
                        data-rendered={(product.x_rendered = true)}
                        data-index={(product.x_index = pIndex++)}
                      />
                      <div class="break-inside-avoid break-after-avoid text-left">
                        {product.data.images[0] && (
                          <div class="float-right w-1/3 mb-2 ml-4 text-right">
                            <a href={`#figure-${product.data.handle}`}>
                              <Image
                                id={`small-img-${product.data.handle}`}
                                data-width={1000}
                                data-height={1000}
                                src={product.data.images[0]?.src} // set to thumb and remove filter if colored page
                                alt={product.data.title}
                                class="w-full border border-current -x-grayscale -x-contrast-100 mt-[2px]"
                              />
                            </a>
                          </div>
                        )}
                      
                        <h3 class="p_title font-sans font-bold uppercase break-after-avoid xtext-xl">
                          {product.data.title}
                        </h3>
                        <div class="p_dimensions" class="break-after-avoid break-before-avoid">
                          {product.data.dimensions}
                        </div>          
                        <div class="p_materials" class="italic break-after-avoid break-inside-avoid break-before-avoid">
                          {product.data.materials}
                        </div>
                        <div class="p_provenance uppercase break-after-avoid break-inside-avoid break-before-avoid" class:list={exhibit.settings.provenance? '' : 'hidden'}>
                          {product.data.provenance}
                        </div>
                      </div>
                      <div set:html={wrapLinks(product.rendered)} class="p_description break-after-avoid break-before-avoid pt-3 pb-2 -x-min-h-24"></div>
                    </div>                    
                      <div class=" text-red text-right font-bold break-inside-avoid break-before-avoid text-red-600">
                        <a class="img-xref italic text-sm" href={`#figure-${product.data.handle}`}>
                          fig. {product._index}, p.
                        </a>
                      </div>
                    </div>
                  
              ))}
              </div>  
            </div>
          ))
        }     
        </div>


      <div class="index figurepage index-bypicture columns-all h-screen">
      <!-- 
        ******************************************************************
        ******************************************************************
        ******************************************************************
        INDEX: BY PICTURE 
        ******************************************************************
        ******************************************************************
        ******************************************************************
      -->
      {(() => {currentEssay = pages.find((p) => p.data.before_exhibit == "The Figures")})()}
      {currentEssay && (
        <div class="essay">
          <!-- 
          ******************************************************************
          ******************************************************************
          ******************************************************************
          ESSAY 
          ******************************************************************
          ******************************************************************
          ******************************************************************
          -->

          <div class="header font-sans border-b-4 border-red mb-12 xpb-8 min-h-[22rem] columns-all">
            <h2 class="title font-bold text-sans" id={`essay-${currentEssay.data.clean_title}`} set:html={currentEssay.data.clean_title}/>
            <div class="subtitle text-2xl"/>
          </div>
      
          <div class="prose max-w-[5in] py-16 mx-auto" set:html={wrapLinks(currentEssay.data.body_html)}/>
        </div>
      )}      

      <div class="header font-sans border-b-4 border-red mb-12 pb-8 min-h-[18.85rem]">
        <h2 class="title relative font-bold">
          The Index: <br/>By Pictures
          <a
            class="absolute top-[-2rem]"
            id="index-bypicture"
          />
        </h2>
        <div class="subtitle text-2xl"></div>
      </div>

      <div class="flex flex-wrap w-full h-full justify-around items-center m-auto">
      {
        products
          .filter((p) => p._rendered)
          .sort((a, b) => a._index - b._index)
          //.sort((a, b) => 0.5 - Math.random())
          .map((p) => (
            <>
              <div class="min-h-1/2 w-auto relative max-w-[3in] break-inside-avoid py-2 head-title" id={`figure-${p.data.handle}`} style={`string-set: head-title content('... ${p.data.title}')`} title={p.data.title}>
                <!-- <div style="-prince-float: outsidenote;" class="text-red text-2xl italic w-16 ">
                  {p._index}
                </> -->
                <div class="">
                  <Image
                    id={`figure-${p.data.handle}`}
                    src={p.data.images[0]?.src}
                    alt={p.data.title}
                    class="border border-current"
                  />
                  <div class="min-h-12">
                  <div class="text-black not-italic hyphens-none">{p.data.title}</div>
                    <div class=" font-bold">
                      <a class="xref !border-b-0 text-red italic" href={`#${p.data.handle}`}>
                        Figure {p._index}
                        {p.data.title.length > 32 && console.log(p.data.title.length + ':' + p.data.title)}
                      </a>
                    </div>
                  </div>
                </div>
              </div>
            </>
          ))
      }
      <!-- <i class="invisible relative w-full max-w-3in mx-auto break-inside-avoid pt-8 border border-current"> </i> -->
    </div>
  </div>



      <div class="index index-alphabetical columns-2">
      <!-- 
        ******************************************************************
        ******************************************************************
        ******************************************************************
        INDEX: ALPHABETICAL 
        ******************************************************************
        ******************************************************************
        ******************************************************************
      -->

      <div class="header font-sans border-b-4 border-red mb-12 xpb-8 min-h-[22rem] columns-all">
        <h2 class="title relative font-bold">
          The Index: <br/>Alphabetical
          <a
            class="absolute top-[-2rem]"
            id="index-alphabetical"
          />
        </h2>
        <div class="subtitle text-2xl"></div>
      </div>

        {
          products
            .filter((p) => p._rendered)
            .map((p) => (
              <>
                {newInitial(p.data.title) && (
                  <a
                    class="font-bold text-red mt-4 textred border-b-1 border-black w-full block"
                  >
                    {p.data.title[0].toUpperCase()}
                  </a>
                )}

                <a class="xref text-xs" href={`#${p.data.handle}`}>
                  {p.data.title}
                </a>
              </>
            ))
        }
      </div>

      <div class="index index-byexhibit columns-2">
      <!-- 
        ******************************************************************
        ******************************************************************
        ******************************************************************
        INDEX: BY EXHIBIT 
        ******************************************************************
        ******************************************************************
        ******************************************************************
      -->

      <div class="header font-sans border-b-4 border-red mb-12 xpb-8 min-h-[22rem] columns-all">
        <h2 class="title relative font-bold">
          The Index: <br/>By Exhibition
          <a
            class="absolute top-[-2rem]"
            id="index-byexhibit"
          />
        </h2>
        <div class="subtitle text-2xl"></div>
      </div>
        {
          exhibits.map((exhibit) => (
            <>
              <a
                class="xref column font-bold mt-4 text-red"
                href={`#${exhibit.name}`}
              >
                {exhibit.name}
              </a>
              {groups[exhibit.name]
                ?.filter((p) => p._rendered)
                .map((p) => (
                  <a class="xref text-xs" href={`#${p.data.handle}`}>
                    {p.data.title}
                  </a>
                ))}
            </>
          ))
        }
      </div>

      <div class="index index-bymaterial columns-2">
        <!-- 
          ******************************************************************
          ******************************************************************
          ******************************************************************
          INDEX: BY MATERIAL 
          ******************************************************************
          ******************************************************************
          ******************************************************************
        -->
        <div class="header font-sans border-b-4 border-red mb-12 xpb-8 min-h-[22rem] columns-all">
        <h2 class="title relative font-bold">
          The Index: <br/>By Material
          <a
            class="absolute top-[-2rem]"
            id="index-bymaterial"
          />
        </h2>
        <div class="subtitle text-2xl"></div>
        </div>
        {
          Object.keys(products_by_material)
            .sort((a, b) => a.localeCompare(b))
            .filter((key) => products_by_material[key].find((p) => p._rendered))
            .map((key) => (
              <>
                <div>
                  <a
                    class="font-bold mt-4 text-red border-b-1 border-black border-dotted block"
                    xhref={`#${key}`}
                  >
                    {key}
                  </a>
                  {products_by_material[key]
                    ?.filter((p) => p._rendered)
                    .map((p) => (
                      <a class="xref text-sm" href={`#${p.data.handle}`}>
                        {p.data.title}
                      </a>
                    ))}
                </div>
              </>
            ))
        }
      </div>

      <div class="index index-bydimension h-full columns-2">
        <!-- 
          ******************************************************************
          ******************************************************************
          ******************************************************************
          INDEX: BY DIMENSION 
          ******************************************************************
          ******************************************************************
          ******************************************************************
        -->
        <div class="header font-sans border-b-4 border-red mb-12 xpb-8 min-h-[22rem] columns-all">
          <h2 class="title relative font-bold">
            The Index: <br/>By Dimension
            <a
              class="absolute top-[-2rem]"
              id="index-bydimension"
            />
          </h2>
          <div class="subtitle text-2xl"></div>
        </div>
        {
          Object.keys(products_by_dimension)
            .sort((a, b) => a.localeCompare(b))
            .filter((key) => products_by_dimension[key].find((p) => p._rendered))
            .map((key) => (
              <>
                <div>
                  <a class="font-bold mt-4 text-red border-b-1 border-black border-dotted block" xhref={`#${key}`} >
                    {key}
                  </a>
                  {products_by_dimension[key]
                    ?.filter((p) => p._rendered)
                    .map((p) => (
                      <a class="xref text-sm" href={`#${p.data.handle}`}>
                        {p.data.title}
                      </a>
                    ))}
                </div>
              </>
            ))
        }
      </div>
      </div>

    </main>
  </body>
</html>
